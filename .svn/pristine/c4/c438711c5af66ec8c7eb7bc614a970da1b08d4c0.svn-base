using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using meihu.App_Code;
using System.Data;
using System.Data.SqlClient;
using Newtonsoft.Json;
using System.Globalization;
using meihu.Models;

namespace meihu.Controllers
{
    public class HomeController : Controller
    {
        // GET: /Home/
        SqlCommon db = new SqlCommon();
        RegisterModel RegisterM = new RegisterModel();
        PersonDataModel Pmodel = new PersonDataModel();
        public ActionResult Index()
        {
            return View();
        }
        #region  邓春
        public ActionResult PersonData() //-----------------个人资料，点击用户名或者头像显示
        {
            var id1 = "";
            var id2 = "";
            try
            {
                id1 = Request.QueryString.ToString().Split('=')[1];
            }
            catch
            {
                Response.Write("<script>window.location.href='" + "../" + "';</script>");
                Response.Write("<script>layer.alert('加载失败，请重新打开!')</script>");
                return View();
            }
            try
            {
                id2 = Pmodel.Find_name(Convert.ToInt32(Session["User_id"].ToString()));
            }
            catch
            {
                Response.Write("<script>layer.alert('未登录!')</script>");
            }
            //Pmodel.PersonData(id1, id2);

            int id = 0;
            if (id1 != "")
            {
                id = Convert.ToInt32(id1);//获取到点击某个人名传的id
            }
            else
            {

                Response.Write("<script>layer.alert('加载失败，请重新打开!')</script>");
                return View();
            }

            ViewData["stackholder"] = Pmodel.PersonData(id, id2);
        
            return View();
        }
        public ContentResult insert_friends()//-----------判断是否为好友，信息是否发送成功
        {
            var end = "";
            try
            {
                string user_name = Request.Form[0].ToString().Trim();//自己名字:Demo
                string fri_name = Request.Form[1].ToString().Trim();//好友名称:不知的天堂
                string text = Request.Form[2].ToString();//好友附言
                string groups = Request.Form[3].ToString().Trim();//认识方式
                end = Pmodel.Addfriends(user_name, fri_name, text, groups);
            }
            catch
            {
                var error = Pmodel.Find_ID(Request.Form[1].ToString().Trim());
                Response.Write("<script>window.location.href='" + "../Home/PersonData?id=" + error + "';</script>");
                Response.Write("<script>layer.alert('请您先登录!')</script>");
            }
           
            // Response.Write("<script>window.location.href='"+"/Home/PersonData"+"';</script>");
            var result = JsonConvert.SerializeObject(end);//强制转换为json数据;
            return Content(result);
        }
        public ContentResult Send_message()//--------------发消息
        {
            var result = "";
            try
            {
                string user_name = Request.Form[0].ToString();//自己名字:Demo
                string fri_name = Request.Form[1].ToString();//交流对象的名字:不知的天堂
                string text = Request.Form[2].ToString();//交流的内容 lei
                DataTable dt = Pmodel.SendMessage(user_name, fri_name, text);
                result = JsonConvert.SerializeObject(dt);

            }
            catch
            {
                return Content(result);
                var error = Pmodel.Find_ID(Request.Form[1].ToString().Trim());
                Response.Write("<script>window.location.href='" + "/Home/PersonData?id=" + error + "';</script>");
                Response.Write("<script>alert('请您先登录!')</script>");
            }
            return Content(result);
        }
        public ContentResult Topic_show()//-------------------获取个人资料帖子部分所需内容
        {
            string user_name = Request.Form[0].ToString();
            DataTable dt = Pmodel.TopicShow(user_name);
            var result = JsonConvert.SerializeObject(dt);//强制转换为json数据;
            return Content(result);
        }
        public ContentResult Reply_show() //回帖时按照最后回复
        {
            string user_name = Request.Form[0].ToString();
            DataTable dt = Pmodel.ReplyShow(user_name);
            var result = JsonConvert.SerializeObject(dt);//强制转换为json数据;
            return Content(result);
        }

#endregion
        public ActionResult Test()
        {
            return View();
        }

        #region 伊世林
        public ActionResult User_Register()
        {
            return View();
        }
        public ContentResult Register_on(string text)//判断注册姓名 邮箱是否重复
        {
            string result = null;
            result = RegisterM.Register_on(text);
            return Content(result);
        }

        public ContentResult User_name_right(string text)//判断用户名是否满足要求
        {
            if ((text.IndexOf('@') > 0) || (text.IndexOf(':') > 0) || (text.IndexOf('*') > 0) || (text.IndexOf('\'') > 0) || (text.IndexOf('-') > 0) || (text.IndexOf('\\') > 0) || (text.IndexOf('.') > 0) || (text.IndexOf('_') > 0))
            {
                return Content("false");
            }
            else
            {
                return Content("true");
            }
        }

        public ContentResult Register_in(string text)//注册账号
        {
            string[] val = new string[7];
            for(int i = 0; i<5; i++)
            {
                val[i] = Request.Form[i].ToString();
            }
            val[5] = "安全提问(未设置请忽略)";
            val[6] = null;

            string result = null;
            result = RegisterM.Register_in(val);
            return Content(result);
        }

        public ContentResult Login_in(string text)//用户登陆
        {
            string[] val = new string[5];
            for (int i = 0; i < 5; i++)
            {
                val[i] = Request.Form[i].ToString();
            }
           
            string result = null;
            result = RegisterM.Login_in(val);
            return Content(result);
        }

        public ContentResult Is_online(string text)//判断是否在线
        {
            string result = null;
            result = RegisterM.Is_online();
            var result1 = JsonConvert.SerializeObject(result);//强制转换为json数据;
            return Content(result1);
        }

        public ContentResult backdown(string text)//  退出
        {
            string result = null;
            result = RegisterM.backdown(text);
            return Content(result);
        }
        
        #endregion


        #region 张宏乾
        public ActionResult Mypost()
        {

            // HomeModel hm = new HomeModel();
            // int count = hm.selectUserCount();     
            //ViewData["count"] = count;
            return View();
        }



        #region   处理分页

        //public ActionResult getpagination()
        //{

        //    return View("My_post");
        //}

        #endregion


        public ActionResult My_post()
        {

            #region


            //int size = 5;
            //int count = 50;
            //int curindex = Convert.ToInt32(Request.QueryString["page"]) == 0 ? 1 : Convert.ToInt32(Request.QueryString["page"]);
            //string pattern = "/Home/My_post?page={0}";
            //string target = "";


            //string result=Pagination.get_pagenation(size, count, curindex, pattern, target);

            //ViewBag.page = result;
            #endregion

            //var para = Request;
            return View();
        }
        public ContentResult getlist(string id, string curpage, string repl,string Text)
        {
            string sql = ""; string Topic_id = ""; string title = ""; string Is_son = ""; string Partake = ""; int Reply_num = 0; string Forum_id = ""; string Forum_name = ""; int Visit_num = 0; string Last_reply_id = ""; string Last_reply_time = ""; string User_id = ""; string Create_on_time = ""; string Is_top = ""; string Is_img = ""; string Is_good = ""; string User_name = ""; string Last_reply_name = ""; string Top = ""; string Good = ""; string Img = ""; string time1 = ""; string time2 = ""; string Hot = ""; string Evaluation_num = ""; string Evaluation = ""; string Reply_page = ""; int Partake1 = 0; int post_num = 0; int user_num = 0; string user_name = ""; string content = ""; string na = ""; string Reply_user_id = ""; string search2 = ""; string forum = ""; string sul = ""; string sqll = ""; string forum_id = ""; int z = 0; string forum_n = ""; var zzz = 0;
            DataTable dt = new DataTable();
            DataTable dta = new DataTable();
            SqlConnection conn = new SqlConnection("Data Source=10.1.56.59;Initial Catalog=BBS_zzn;Persist Security Info=True;User ID=sa;Password=123456");
            conn.Open();
            if (repl == ":::")
            {
                try
                {
                    na = Session["User_id"].ToString();
                    sql = "select * from ((User_registration as a inner join Create_topic as b on a.ID=b.User_id) inner join Reply_message as c on b.ID=c.Topic_id) inner join Topic_message as d on c.Topic_id=d.Topic_id where c.Reply_user_id=" + na;
                    SqlDataAdapter cmdd = new SqlDataAdapter(sql, conn);
                    cmdd.Fill(dt);
                    sql = "select * from( User_registration as a inner join Create_topic as b on a.ID=b.User_id) inner join Topic_message as c on b.ID=c.Topic_id where User_id=" + na;
                    SqlDataAdapter cmaa = new SqlDataAdapter(sql, conn);
                    cmaa.Fill(dt);
                    DataView dv = dt.DefaultView;
                    dv.Sort = "Create_on_time desc";
                    dta = dv.ToTable();
                    zzz = 1;
                }
                catch { }
            }
            else
            {
                if (id == "0" || id == "4")
                {
                    sql = "select * from Topic_message as a inner join Create_topic as b on a.Topic_id=b.id where Visit_num>1000 order by Create_on_time desc";
                }
                else if (id == "1" || id == "5")
                {
                    sql = "select * from Topic_message as a inner join Create_topic as b on a.Topic_id=b.id where Is_good=1 order by Create_on_time desc";
                }
                else if (id == "2" || id == "6")
                {
                    sql = "select * from Topic_message as a inner join Create_topic as b on a.Topic_id=b.id order by Create_on_time desc";
                }
                else if (id == "3")
                {
                    sql = "select * from Topic_message as a inner join Create_topic as b on a.Topic_id=b.id where Visit_num>1000 order by Create_on_time desc";
                }
                else if (id == "7")
                {
                    sql = "select User_name,ID from User_registration  order by ID desc";
                    SqlDataAdapter num32 = new SqlDataAdapter(sql, conn);
                    num32.Fill(dt);
                    user_name = dt.Rows[0]["User_name"].ToString();
                    User_id = dt.Rows[0]["ID"].ToString();
                    conn.Close();
                    return Content(JsonConvert.SerializeObject(dt));
                }
                else { zzz = 1; }
            }
        
                        if (zzz!=0)
                        {
                            try
                            {
                                if (curpage.Substring(0, 1) == ":")
                                {
                                    forum_n = id.Split(':')[1];
                                    var plate = curpage.Substring(1);
                                    plate = plate.Trim();
                                    if (plate != "全部")
                                    {
                                        dt.Clear();
                                        dta.Clear();
                                        sql = "select id,Is_son,Second_forum from Second_forum ";
                                        SqlDataAdapter cmd11 = new SqlDataAdapter(sql, conn);
                                        cmd11.Fill(dt);
                                        for (var i = 0; i < dt.Rows.Count; i++)
                                        {
                                            forum = dt.Rows[i]["Second_forum"].ToString();
                                            forum = forum.Trim();
                                            if (forum == plate)
                                            {
                                                forum_id = dt.Rows[i]["id"].ToString();
                                                Is_son = "0";
                                                sql = "select * from (Topic_message as a inner join Create_topic as b on a.Topic_id=b.id )inner join User_registration as c on b.User_id= c.ID where Forum_id=" + forum_id + " and User_id=" + forum_n + "and Is_son=" + Is_son + "and b.Title like '%"+Text+"%' order by Create_on_time desc";
                                                z = 1;
                                                break;
                                            }
                                        }
                                        if (z == 0)
                                        {
                                            dt.Clear();
                                            dta.Clear();
                                            sql = "select id,Son_forum  from Son_forum";
                                            SqlDataAdapter cmd12 = new SqlDataAdapter(sql, conn);
                                            cmd12.Fill(dt);
                                            for (var i = 0; i < dt.Rows.Count; i++)
                                            {
                                                forum = dt.Rows[i]["Son_forum"].ToString();
                                                forum = forum.Trim();
                                                if (forum == plate)
                                                {
                                                    forum_id = dt.Rows[i]["id"].ToString();
                                                    Is_son = "1";
                                                    sql = "select * from (Topic_message as a inner join Create_topic as b on a.Topic_id=b.id )inner join User_registration as c on b.User_id= c.ID where Forum_id=" + forum_id + " and User_id=" + forum_n + "and Is_son=" + Is_son + "and b.Title like '%" + Text + "%' order by Create_on_time desc";
                                                    z = 2;
                                                    break;
                                                }
                                            }
                                        }
                                        if (z < 1)
                                        {
                                            return Content(sul);
                                        }


                                        else
                                        {
                                            sql = "select * from (Topic_message as a inner join Create_topic as b on a.Topic_id=b.id )inner join User_registration as c on b.User_id= c.ID where Forum_id=" + forum_id + " and User_id=" + forum_n + " and Is_son=" + Is_son + "and b.Title like '%" + Text + "%' order by Create_on_time desc";
                                        }

                                    }
                                    else if(Text!="")
                                    {
                                        sql = "select * from (Topic_message as a inner join Create_topic as b on a.Topic_id=b.id )inner join User_registration as c on b.User_id= c.ID where User_id=" + forum_n + " and b.Title like '%" + Text + "%' order by Create_on_time desc";
                                    }
                                    else
                                    {
                                        id = id.Split(':')[1];
                                        sql = "select * from (Topic_message as a inner join Create_topic as b on a.Topic_id=b.id )inner join User_registration as c on b.User_id= c.ID where c.ID='" + id + "' order by Create_on_time desc";
                                    }
                                }
                                else
                                {
                                    id = id.Split(':')[1];
                                    sql = "select * from (Topic_message as a inner join Create_topic as b on a.Topic_id=b.id )inner join User_registration as c on b.User_id= c.ID where c.ID='" + id + "' order by Create_on_time desc";
                                } 
                               
                            }
                            catch
                            {
                                return Content(sul);
                            }
                   }
            SqlDataAdapter cmd = new SqlDataAdapter(sql, conn);
            cmd.Fill(dta);
            List<Latest_hot> models = new List<Latest_hot>();

            int aa;
            TempData["listmodel"] = models;
            try
            {
                aa = (Convert.ToInt32(curpage) != -1 && Convert.ToInt32(curpage) != 0) ? Convert.ToInt32(curpage) : 1;
            }
            catch { aa = 1; }
            int count = dta.Rows.Count;
            if (aa != 0)
            {

                dt = dta.Clone();

                for (int i = 50 * (aa - 1); i < aa * 50; i++)
                {
                    try
                    {
                        dt.Rows.Add(dta.Rows[i].ItemArray);
                    }
                    catch { break; }
                }

            }

            #region
            for (var i = 0; i < dt.Rows.Count; i++)
            {
                conn.Close();
                conn.Open();
                //string user_iD = Session["User_id"].ToString();
                sql = "select User_name from User_registration as a inner join User_message as b on a.ID=b.User_id where Data_name='注册时间' order by Data_cont desc";
                SqlCommand name = new SqlCommand(sql, conn);
                user_name = Convert.ToString(name.ExecuteScalar());
                conn.Close();
                conn.Open();
                sql = "select count(ID) from Create_topic";
                SqlCommand num = new SqlCommand(sql, conn);
                post_num = Convert.ToInt32(num.ExecuteScalar());
                conn.Close();
                conn.Open();
                sql = "select count(ID) from User_registration";
                SqlCommand num1 = new SqlCommand(sql, conn);
                user_num = Convert.ToInt32(num1.ExecuteScalar());
                conn.Close();
                conn.Open();
                title = dt.Rows[i]["Title"].ToString();                         //帖子标题
                User_id = dt.Rows[i]["User_id"].ToString();                     //用户ID
                // Create_on_time = dt.Rows[i]["Create_on_time"].ToString();       //发帖时间
                DateTime time = Convert.ToDateTime(dt.Rows[i]["Create_on_time"].ToString());       //获取发帖时间
                if (id == "2")
                {
                    time1 = time.ToString("yyyy-M-d HH:mm", DateTimeFormatInfo.InvariantInfo);          //转换格式
                }
                else if (id == "6")
                {
                    time1 = time.ToString("yyyy-M-d HH:mm", DateTimeFormatInfo.InvariantInfo);          //转换格式
                    time1 = "<em>" + time1 + "</em>";
                }
                else
                {
                    time1 = "";
                }
                Topic_id = dt.Rows[i]["Topic_id"].ToString();                   //帖子ID
                Evaluation_num = dt.Rows[i]["Evaluation_num"].ToString();
                Reply_num = Convert.ToInt32(dt.Rows[i]["Reply_num"].ToString());                 //回复数
                Visit_num = Convert.ToInt32(dt.Rows[i]["Visit_num"].ToString());                 //查看数
                Last_reply_id = dt.Rows[i]["Last_reply_id"].ToString();         //最后回复的用户id
                DateTime time3 = Convert.ToDateTime(dt.Rows[i]["Create_on_time"].ToString());       //获取最后回复时间
                time2 = time3.ToString("yyyy-M-d HH:mm", DateTimeFormatInfo.InvariantInfo);         //转换格式
                // Last_reply_time = dt.Rows[i]["Last_reply_time"].ToString();     //最后回复的时间
                Is_son = dt.Rows[i]["Is_son"].ToString();                       //是否是三级板块
                Forum_id = dt.Rows[i]["Forum_id"].ToString();                   //板块id
                Is_top = dt.Rows[i]["Is_top"].ToString();                       //是否置顶
                Is_good = dt.Rows[i]["Is_good"].ToString();                     //是否精华
                Is_img = dt.Rows[i]["Is_img"].ToString();                       //是否有图片
                if (repl == ":::")
                {
                    Reply_user_id = dt.Rows[i]["Reply_user_id"].ToString();
                }
                sql = "select User_name from User_registration where ID=" + User_id;
                SqlCommand cmd2 = new SqlCommand(sql, conn);
                SqlDataReader reader1 = cmd2.ExecuteReader();
                while (reader1.Read())
                {
                    User_name = String.Format("{0}", reader1[0]);                //用户名称
                }
                conn.Close();
                conn.Open();
                sql = "select User_name from User_registration where ID=" + Last_reply_id;
                SqlCommand cmd3 = new SqlCommand(sql, conn);
                SqlDataReader reader2 = cmd3.ExecuteReader();
                while (reader2.Read())
                {
                    Last_reply_name = string.Format("{0}", reader2[0]);             //回复人名称
                }
                conn.Close();
                conn.Open();
                if (Is_son == "1")
                {
                    sql = "select Son_forum from Son_forum where ID=" + Forum_id;
                }
                else
                {
                    sql = "select Second_forum from Second_forum where ID=" + Forum_id;
                }
                SqlCommand cmd1 = new SqlCommand(sql, conn);
                SqlDataReader reader = cmd1.ExecuteReader();
                while (reader.Read())
                {
                    Forum_name = String.Format("{0}", reader[0]);                  //板块名称
                }
                conn.Close();
                if (Is_top == "1")
                {
                    Top = "<a title=\"本版置顶主题 - 新窗口打开\"><img src=\"../../image/pin_1.gif\" /></a>";                 //置顶图标
                }
                else
                {
                    Top = "<a title=\"新窗口打开\"><img src=\"../../image/folder_common.gif\" /></a>";         //普通图标
                }
                if (Is_good == "1")
                {
                    Good = "<img src=\"../../image/digest_1.gif\"align=\"absmiddle\" title=\"1级精华\" />";
                }
                else
                {
                    Good = "";
                }
                if (Convert.ToInt32(Visit_num) > 1000)
                {
                    Hot = "<img src=\"../../image/hot_1.gif\" align=\"absmiddle\" title=\"1 级热门\" />";
                }
                else
                {
                    Hot = "";
                }
                if (Is_img == "1")
                {
                    Img = "<img src=\"../../image/image_s.gif\"align=\"absmiddle\" title=\"图片附件\" />";
                }
                else
                {
                    Img = "";
                }
                if (Convert.ToInt32(Evaluation_num) > 0)
                {
                    Evaluation = "<img src=\"../../image/agree.gif\"align=\"absmiddle\" title=\"帖子被加分\" />";
                }
                else
                {
                    Evaluation = "";
                }
                sql = "select distinct Reply_user_id from Reply_message where Topic_id=" + Topic_id + "and Reply_user_id!=" + User_id;
                conn.Open();
                SqlDataAdapter cmd4 = new SqlDataAdapter(sql, conn);
                DataTable dt1 = new DataTable();
                cmd4.Fill(dt1);
                if (id == "0")
                {
                    Partake1 = dt1.Rows.Count;
                    Partake1 = Partake1 + 1;
                    Partake = "&nbsp;" + Partake1 + "人参与";
                }
                else if (id == "4")
                {
                    Partake1 = dt1.Rows.Count;
                    Partake1 = Partake1 + 1;
                    Partake = "<em><span class=\"xi1\">" + Partake1 + "人参与" + "</span></em>";
                }
                else
                {
                    Partake = "";
                }
                conn.Close();
                //Reply_page = "";
                int w = 0;
                if (Reply_num > 9 && Reply_num < 60)
                {
                    Reply_page = "&nbsp;...";
                    for (int q = 2; q <= Reply_num / 10 + 1; q++)
                    {
                        Reply_page = Reply_page + "<a>" + q + "</a>";
                    }
                }
                else if (Reply_num > 59)
                {
                    Reply_page = "&nbsp;...";
                    for (int q = 2; q <= Reply_num / 10 + 1; q++)
                    {
                        if (q == 7)
                        {
                            Reply_page = Reply_page + "..";
                            w = 1;
                        }
                        if (w < 1)
                        {
                            Reply_page = Reply_page + "<a>" + q + "</a>";
                        }
                        else
                        {
                            break;
                        }
                    }
                    w = Reply_num / 10 + 1;
                    Reply_page = Reply_page + "<a>" + w + "</a>";
                }
                else
                {
                    Reply_page = "";
                }
                if (repl == ":::")
                {
                    if (User_id == na)
                    {
                        content = dt.Rows[i]["Topic_content"].ToString();
                    }
                    else if (Reply_user_id == na)
                    {
                        content = dt.Rows[i]["Reply_content"].ToString();
                    }
                }
                Latest_hot ls = new Latest_hot()
                {
                    title = title,                          // 帖子标题
                    Topic_id=Topic_id.Trim(),                                               //帖子ID
                    Create_on_time = time1,                                          //发帖时间
                    Reply_num = Reply_num,                  //回复数
                    Visit_num = Visit_num,                  //查看数   
                    Last_reply_time = time2,                                         //最后回复时间
                    User_id = User_id,                                                 //发帖人ID
                    User_name = User_name,                                           //发帖人名称
                    Last_reply_name = Last_reply_name,                               //最后回复人名称
                    Forum_name = Forum_name,                                         //板块名称
                    Partake = Partake,                                                 //参与人数
                    Reply_page = Reply_page,                                           //回复页数
                    Top = Top,                                                       //图标
                    Good = Good,                                                     //精华图标
                    Img = Img,                                                       //图片附件
                    Hot = Hot,                                                         //热门
                    Evaluation = Evaluation,                                           //评分
                    user_num = user_num,                                                   //会员数目
                    post_num = post_num,                                                  //帖子数目
                    user_name = user_name,                                               //会员名称
                    content = content,                                                   //回复内容
                    post_count = count,
                };


                if (i == 0)
                    count = ls.post_count;




                models.Add(ls);

            }


            #endregion
            //sql = "select distinct Reply_user_id ,count(*)as partake from Reply_message where Topic_id=" + Topic_id;
            //var result = JsonConvert.SerializeObject(dt);


            #region
            int pagenum = 50;

            int curindex = aa;
            string pattern = "";
            string target = "";
            string pageresult = "";
            if (count > 50)
            {
                pageresult = Pagination.get_pagenation(pagenum, count, curindex, pattern, target);
            }
            #endregion
            //TempData["listmodel"] = "";


            var result = new
            {
                pagestr = pageresult,
                modellist = models
            };//JsonConvert.SerializeObject(models);
            return Content(JsonConvert.SerializeObject(result));
        }


        public ActionResult Introduction()
        {
            return View();
        }
        public ActionResult Send_post()
        {
            return View();
        }
        #endregion

    }
}
