//*********************************************************
//-----------------------kylin----------------------------
//
//用户 注册 登录 退出 时 后台代码
//
//*********************************************************

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using meihu;
using System.Data;

namespace meihu.Models
{
    public class RegisterModel
    {
        SqlCommon db = new SqlCommon();
        public string Register_on(string text)//判断注册姓名 邮箱是否重复
        {
            string sql;
            if (text.IndexOf('@') > 0 && text.IndexOf('.') > 0)
            {
                text = "'" + text + "'";
                sql = "select * from User_registration where Email =" + text;
            }
            else
            {
                text = "'" + text + "'";
                sql = "select * from User_registration where User_name =" + text;
            }

            DataTable dt = db.getdata(sql);
            try
            {
                string x = dt.Rows[0][0].ToString();
                return "false";
            }
            catch
            {
                return "true";
            }
        }

        public string Register_in(string[] val)//注册账号
        {

            //val[]     name, pwd, Email, Question, Answer, Grade, Major;
            string sql = string.Format("INSERT INTO User_registration VALUES ('{0}','{1}','{2}','{3}','{4}','{5}','{6}')", val[0], val[1], val[2], val[3], val[4], val[5], val[6]);
            int x = db.check(sql);

            if (x == 1)
            {
                sql = string.Format("select ID from User_registration where User_name=" + "'" + val[0] + "'");
                DataTable dt = db.getdata(sql);
                string user_id = dt.Rows[0][0].ToString();
                HttpContext.Current.Session["User_id"] = user_id;//普通类 -----------------------使用session的方法-----------------------
                
                //-----------------------------------------插入其他数据
                string Data_cont = null;
                string Is_show = "公开";
                string[] user_mess = { "个人签名", "真实姓名", "性别", "出生地", "居住地", "毕业学校", "学历", "公司", "职业", "职位", "交友目的", "兴趣爱好", "上次发表时间", "情感状态", "血型", "证件类型", "证件号", "邮寄地址", "邮编", "固定电话", "手机", "QQ", "阿里旺旺", "年收入", "自我介绍" };
                for (int i = 0; i < 25; i++)
                {
                    sql = string.Format("insert into User_message values('{0}', '{1}', '{2}', '{3}')", user_id, user_mess[i], Data_cont, Is_show);
                    x = db.check(sql);
                }
                Data_cont = "0";
                string[] user_mes = { "好友数", "回帖数", "在线时间", "积分", "金钱", "主题数" };
                for (int i = 0; i < 6; i++)
                {
                    sql = string.Format("insert into User_message values('{0}', '{1}', '{2}', '{3}')", user_id, user_mes[i], Data_cont, Is_show);
                    x = db.check(sql);
                }
                Data_cont = DateTime.Now.ToLocalTime().ToString();
                string[] user_me = { "注册时间", "最后访问", "上次活动时间" };
                for (int i = 0; i < 3; i++)
                {
                    sql = string.Format("insert into User_message values('{0}', '{1}', '{2}', '{3}')", user_id, user_me[i], Data_cont, Is_show);
                    x = db.check(sql);
                }

                //-------------------------------------生日
                sql = string.Format("insert into User_message values('{0}', '{1}', '{2}', '{3}')", user_id, "生日", "-", Is_show);
                x = db.check(sql);
                //-------------------------------------个人主页
                sql = string.Format("insert into User_message values('{0}', '{1}', '{2}', '{3}')", user_id, "个人主页", "http://", Is_show);
                x = db.check(sql);
                //-------------------------------------注册IP
                string IP = (HttpContext.Current.Request.ServerVariables["HTTP_VIA"] != null) ? HttpContext.Current.Request.ServerVariables["HTTP_X_FORWARDED_FOR"].ToString() : HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"].ToString();
                sql = string.Format("insert into User_message values('{0}', '{1}', '{2}', '{3}')", user_id, "注册IP", IP, Is_show);
                x = db.check(sql);
                //-------------------------------------上次访问IP
                sql = string.Format("insert into User_message values('{0}', '{1}', '{2}', '{3}')", user_id, "上次访问IP", IP, Is_show);
                x = db.check(sql);
                //-------------------------------------所在时区
                sql = string.Format("insert into User_message values('{0}', '{1}', '{2}', '{3}')", user_id, "所在时区", "系统默认", Is_show);
                x = db.check(sql);
                //-------------------------------------已用空间
                sql = string.Format("insert into User_message values('{0}', '{1}', '{2}', '{3}')", user_id, "已用空间", "0 B", Is_show);
                x = db.check(sql);
                //-------------------------------------年级
                sql = string.Format("insert into User_message values('{0}', '{1}', '{2}', '{3}')", user_id, "年级", val[5], Is_show);
                x = db.check(sql);
                //-------------------------------------专业
                sql = string.Format("insert into User_message values('{0}', '{1}', '{2}', '{3}')", user_id, "专业", val[6], Is_show);
                x = db.check(sql);
                //-------------------------------------时区
                sql = string.Format("insert into User_message values('{0}', '{1}', '{2}', '{3}')", user_id, "时区", "使用系统默认", Is_show);
                x = db.check(sql);
                //---------------------------------------------头像
                sql = string.Format("insert into User_message values('{0}', '{1}', '{2}', '{3}')", user_id, "头像", "../../image/noavatar_middle.jpg", Is_show);
                x = db.check(sql);
                //---------------------------------------------头像(小)
                sql = string.Format("insert into User_message values('{0}', '{1}', '{2}', '{3}')", user_id, "头像(小)", "../../image/noavatar_small.gif", Is_show);
                x = db.check(sql);

                return "true";
            }
            else
            {
                return "false";
            }
        }

        public string Login_in(string[] val)//用户登陆
        {
            //val   用户名&邮箱   内容  密码  问题  答案  
            string sql = string.Format("select ID from User_registration where " + val[0] + " = " + "'" + val[1] + "'" + "and " + " User_pwd =" + "'" + val[2] + "'" + "and " + " Question =" + "'" + val[3] + "'" + "and " + " Answer =" + "'" + val[4] + "'");
            try
            {
                DataTable dt = db.getdata(sql);
                string user_id = dt.Rows[0][0].ToString();
                if (user_id != null)
                {
                    HttpContext.Current.Session["User_id"] = user_id;

                    string datetime = DateTime.Now.ToLocalTime().ToString();//     修改个人信息表里的登陆时间
                    datetime = "'" + datetime + "'";
                    sql = string.Format("UPDATE User_message SET Data_cont =" + datetime + "WHERE User_id =" + user_id + "and Data_name = '上次活动时间'");
                    int x = db.check(sql);
                    sql = string.Format("UPDATE User_message SET Data_cont =" + datetime + "WHERE User_id =" + user_id + "and Data_name = '最后访问'");
                    x = db.check(sql);
                    string IP = (HttpContext.Current.Request.ServerVariables["HTTP_VIA"] != null) ? HttpContext.Current.Request.ServerVariables["HTTP_X_FORWARDED_FOR"].ToString() : HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"].ToString();//修改IP信息
                    sql = string.Format("UPDATE User_message SET Data_cont ='" + IP + "' WHERE User_id =" + user_id + "and Data_name = '上次访问IP'");
                    x = db.check(sql);

                    return "true";
                }
                else
                {
                    return "false";
                }
            }
            catch
            {
                return "false";
            }
        }

        public string Is_online()//判断是否在线
        {
            try
            {
                string na = HttpContext.Current.Session["User_id"].ToString();
                if (HttpContext.Current.Session["User_id"] == null || HttpContext.Current.Session["User_id"].ToString()=="")
                {
                    return "false";
                }

                string sql = string.Format("select User_name from User_registration where ID=" + "'" + na + "'");//查询用户名
                DataTable dt = db.getdata(sql);
                string user_name = dt.Rows[0][0].ToString();

                int length = user_name.Length;
                for (; length < 15; length++)
                {
                    user_name += ' ';
                }
                sql = string.Format("select Data_cont from User_message where User_id=" + "'" + na + "'" + " and Data_name = '积分'");//查询用户积分
                DataTable dt1 = db.getdata(sql);
                string user_jifen = dt1.Rows[0][0].ToString();

                sql = string.Format("select Data_cont from User_message where User_id=" + "'" + na + "'" + "and Data_name = '头像(小)'");//查询用户头像
                DataTable dt2 = db.getdata(sql);
                string user_photo = dt2.Rows[0][0].ToString();
                string text = user_name + ":" + na + ":" + user_jifen + ":" + user_photo;//---用户名---用户ID---用户积分---用户头像

                return text;
            }
            catch
            {
                return "false";
            }
        }

        public string backdown(string text)//  退出
        {
            text = "'" + text + "'";
            string sql = "select ID from User_registration where User_name =" + text;
            DataTable dt = db.getdata(sql);
            string User_id = dt.Rows[0][0].ToString();
            if (User_id != null)
            {
                HttpContext.Current.Session["User_id"] = null;

                return "true";
            }
            else
            {
                return "false";
            }
        }
    }
}